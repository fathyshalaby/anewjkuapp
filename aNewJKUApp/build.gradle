apply plugin: 'com.android.application'
android {
    signingConfigs {
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "org.voidsink.anewjkuapp"
        versionCode 140052
        versionName "0.43.3"
        minSdkVersion 14
        targetSdkVersion 25

        vectorDrawables.useSupportLibrary = true // Android Plugin for Gradle 2.0.0

        proguardFiles getDefaultProguardFile('proguard-android.txt'),
                'proguard-rules.txt',
                'proguard-rules-glide.txt',
                'proguard-rules-google-play-services.txt',
                'proguard-rules-ical4j.txt',
                'proguard-rules-aboutlibraries.pro',
                'proguard-rules-keep-names.txt'

        buildConfigField "boolean", "FOSS_ONLY", "false"

        return void // fix lint warning "Not all execution pathsreturn a value"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant, defaultConfig)
            }
            initProvider(defaultConfig, "")

            return void // fix lint warning "Not all execution pathsreturn a value"
        }
        debug {
            minifyEnabled true
            shrinkResources true
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            initProvider(defaultConfig, ".debug")

            return void // fix lint warning "Not all execution pathsreturn a value"
        }
    }

    productFlavors {
        google {
            return void // fix lint warning "Not all execution pathsreturn a value"
        }
        fdroid {
            buildConfigField "boolean", "FOSS_ONLY", "true"
            return void // fix lint warning "Not all execution pathsreturn a value"
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        //exclude 'META-INF/DEPENDENCIES'
        //exclude 'META-INF/NOTICE'
        //exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        //exclude 'META-INF/ASL2.0'

        return void // fix lint warning "Not all execution pathsreturn a value"
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.0.1'
//    compile 'com.android.support:appcompat-v7:25.0.0'
//    compile 'com.android.support:gridlayout-v7:25.0.0'
//    compile 'com.android.support:cardview-v7:25.0.0'
//    compile 'com.android.support:recyclerview-v7:25.0.0'
    compile 'com.android.support:preference-v7:25.0.1'
    compile 'com.android.support:preference-v14:25.0.1'
    compile 'com.android.support:design:25.0.1'
    googleCompile 'com.google.android.gms:play-services-analytics:10.0.0'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'org.mapsforge:mapsforge-core:0.6.1'
    compile 'org.mapsforge:mapsforge-map:0.6.1'
    compile 'org.mapsforge:mapsforge-map-android:0.6.1'
    compile 'org.jsoup:jsoup:1.10.1'
    compile 'org.mnode.ical4j:ical4j:1.0.7'
    compile 'org.mnode.ical4j:ical4j-extensions:0.9.2'
//    compile 'org.slf4j:slf4j-android:1.7.21'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.lecho:hellocharts-library:1.5.8@aar'
    //compile 'com.github.alamkanak:android-week-view:1.2.3'
    compile 'de.cketti.library.changelog:ckchangelog:1.2.2'
    compile('com.mikepenz:aboutlibraries:5.9.0@aar') {
        transitive = true
    }
    compile project(':sectionedRecyclerAdapter')
    compile project(':android-week-view')
    //compile project(':kussslibrary')
}

def appendVersionNameVersionCode(variant, defaultConfig) {
    variant.outputs.each { output ->
        def file = output.outputFile;
        output.outputFile = new File(
                file.parent,
                file.name.replace(".apk", "-${variant.versionName}.apk"))
    }
}

def initProvider(defaultConfig, suffix) {
    defaultConfig.resValue "string", "config_kusss_provider", defaultConfig.applicationId + suffix + '.provider'
    defaultConfig.resValue "string", "config_kusss_account_type", defaultConfig.applicationId + suffix + '.account'
    defaultConfig.resValue "string", "config_poi_provider", defaultConfig.applicationId + suffix + '.provider.poi'
    defaultConfig.resValue "string", "config_poi_content_uri", "content://" + defaultConfig.applicationId + suffix + ".provider.poi/poi"

    defaultConfig.buildConfigField "String", "CONFIG_KUSSS_PROVIDER", '"' + defaultConfig.applicationId + suffix + '.provider"'
    defaultConfig.buildConfigField "String", "CONFIG_KUSSS_ACCOUNT_TYPE", '"' + defaultConfig.applicationId + suffix + '.account"'
    defaultConfig.buildConfigField "String", "CONFIG_POI_PROVIDER", '"' + defaultConfig.applicationId + suffix + '.provider.poi"'
}
